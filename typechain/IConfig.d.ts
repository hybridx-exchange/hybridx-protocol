/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface IConfigInterface extends ethers.utils.Interface {
  functions: {
    "appendOrderBookByteCode(bytes,uint256)": FunctionFragment;
    "appendOrderNFTByteCode(bytes,uint256)": FunctionFragment;
    "baseSignificantDigits(address)": FunctionFragment;
    "baseSignificantDigitsUpdate(address,uint256)": FunctionFragment;
    "getOrderBookByteCode()": FunctionFragment;
    "getOrderBookFactory()": FunctionFragment;
    "getOrderBookQuery()": FunctionFragment;
    "getOrderNFTByteCode()": FunctionFragment;
    "getPairFactory()": FunctionFragment;
    "priceStep(address,uint256)": FunctionFragment;
    "priceStepFactor()": FunctionFragment;
    "priceStepFactorUpdate(uint256)": FunctionFragment;
    "priceStepMap(address)": FunctionFragment;
    "priceStepUpdate(address,uint256)": FunctionFragment;
    "protocolFeeRate(address)": FunctionFragment;
    "protocolFeeRateUpdate(address,uint256)": FunctionFragment;
    "quoteSignificantDigits(address)": FunctionFragment;
    "quoteSignificantDigitsUpdate(address,uint256)": FunctionFragment;
    "setOrderBookByteCode(bytes)": FunctionFragment;
    "setOrderBookFactory(address)": FunctionFragment;
    "setOrderBookQuery(address)": FunctionFragment;
    "setOrderNFTByteCode(bytes)": FunctionFragment;
    "setPairFactory(address)": FunctionFragment;
    "subsidyFeeRate(address)": FunctionFragment;
    "subsidyFeeRateUpdate(address,uint256)": FunctionFragment;
    "wETH()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "appendOrderBookByteCode",
    values: [BytesLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "appendOrderNFTByteCode",
    values: [BytesLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "baseSignificantDigits",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "baseSignificantDigitsUpdate",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getOrderBookByteCode",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getOrderBookFactory",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getOrderBookQuery",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getOrderNFTByteCode",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getPairFactory",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "priceStep",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "priceStepFactor",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "priceStepFactorUpdate",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "priceStepMap",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "priceStepUpdate",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "protocolFeeRate",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "protocolFeeRateUpdate",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "quoteSignificantDigits",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "quoteSignificantDigitsUpdate",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setOrderBookByteCode",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "setOrderBookFactory",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setOrderBookQuery",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setOrderNFTByteCode",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "setPairFactory",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "subsidyFeeRate",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "subsidyFeeRateUpdate",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "wETH", values?: undefined): string;

  decodeFunctionResult(
    functionFragment: "appendOrderBookByteCode",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "appendOrderNFTByteCode",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "baseSignificantDigits",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "baseSignificantDigitsUpdate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getOrderBookByteCode",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getOrderBookFactory",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getOrderBookQuery",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getOrderNFTByteCode",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPairFactory",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "priceStep", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "priceStepFactor",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "priceStepFactorUpdate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "priceStepMap",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "priceStepUpdate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "protocolFeeRate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "protocolFeeRateUpdate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "quoteSignificantDigits",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "quoteSignificantDigitsUpdate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setOrderBookByteCode",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setOrderBookFactory",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setOrderBookQuery",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setOrderNFTByteCode",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setPairFactory",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "subsidyFeeRate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "subsidyFeeRateUpdate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "wETH", data: BytesLike): Result;

  events: {};
}

export class IConfig extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: IConfigInterface;

  functions: {
    appendOrderBookByteCode(
      byteCode: BytesLike,
      flag: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "appendOrderBookByteCode(bytes,uint256)"(
      byteCode: BytesLike,
      flag: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    appendOrderNFTByteCode(
      byteCode: BytesLike,
      flag: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "appendOrderNFTByteCode(bytes,uint256)"(
      byteCode: BytesLike,
      flag: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    baseSignificantDigits(
      orderBook: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "baseSignificantDigits(address)"(
      orderBook: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    baseSignificantDigitsUpdate(
      orderBook: string,
      newBaseSignificantDigits: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "baseSignificantDigitsUpdate(address,uint256)"(
      orderBook: string,
      newBaseSignificantDigits: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    getOrderBookByteCode(overrides?: CallOverrides): Promise<{
      bytecode: string;
      0: string;
    }>;

    "getOrderBookByteCode()"(overrides?: CallOverrides): Promise<{
      bytecode: string;
      0: string;
    }>;

    getOrderBookFactory(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "getOrderBookFactory()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    getOrderBookQuery(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "getOrderBookQuery()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    getOrderNFTByteCode(overrides?: CallOverrides): Promise<{
      bytecode: string;
      0: string;
    }>;

    "getOrderNFTByteCode()"(overrides?: CallOverrides): Promise<{
      bytecode: string;
      0: string;
    }>;

    getPairFactory(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "getPairFactory()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    priceStep(
      orderBook: string,
      price: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "priceStep(address,uint256)"(
      orderBook: string,
      price: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    priceStepFactor(overrides?: Overrides): Promise<ContractTransaction>;

    "priceStepFactor()"(overrides?: Overrides): Promise<ContractTransaction>;

    priceStepFactorUpdate(
      newPriceStepFactor: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "priceStepFactorUpdate(uint256)"(
      newPriceStepFactor: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    priceStepMap(
      orderBook: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "priceStepMap(address)"(
      orderBook: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    priceStepUpdate(
      orderBook: string,
      newPriceStep: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "priceStepUpdate(address,uint256)"(
      orderBook: string,
      newPriceStep: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    protocolFeeRate(
      orderBook: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "protocolFeeRate(address)"(
      orderBook: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    protocolFeeRateUpdate(
      orderBook: string,
      newProtocolFeeRate: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "protocolFeeRateUpdate(address,uint256)"(
      orderBook: string,
      newProtocolFeeRate: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    quoteSignificantDigits(
      orderBook: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "quoteSignificantDigits(address)"(
      orderBook: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    quoteSignificantDigitsUpdate(
      orderBook: string,
      newQuoteSignificantDigits: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "quoteSignificantDigitsUpdate(address,uint256)"(
      orderBook: string,
      newQuoteSignificantDigits: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setOrderBookByteCode(
      byteCode: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setOrderBookByteCode(bytes)"(
      byteCode: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setOrderBookFactory(
      newOrderBookFactory: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setOrderBookFactory(address)"(
      newOrderBookFactory: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setOrderBookQuery(
      newOrderBookQuery: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setOrderBookQuery(address)"(
      newOrderBookQuery: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setOrderNFTByteCode(
      byteCode: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setOrderNFTByteCode(bytes)"(
      byteCode: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setPairFactory(
      newPairFactory: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setPairFactory(address)"(
      newPairFactory: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    subsidyFeeRate(
      orderBook: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "subsidyFeeRate(address)"(
      orderBook: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    subsidyFeeRateUpdate(
      orderBook: string,
      newSubsidyFeeRate: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "subsidyFeeRateUpdate(address,uint256)"(
      orderBook: string,
      newSubsidyFeeRate: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    wETH(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "wETH()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;
  };

  appendOrderBookByteCode(
    byteCode: BytesLike,
    flag: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "appendOrderBookByteCode(bytes,uint256)"(
    byteCode: BytesLike,
    flag: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  appendOrderNFTByteCode(
    byteCode: BytesLike,
    flag: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "appendOrderNFTByteCode(bytes,uint256)"(
    byteCode: BytesLike,
    flag: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  baseSignificantDigits(
    orderBook: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "baseSignificantDigits(address)"(
    orderBook: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  baseSignificantDigitsUpdate(
    orderBook: string,
    newBaseSignificantDigits: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "baseSignificantDigitsUpdate(address,uint256)"(
    orderBook: string,
    newBaseSignificantDigits: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  getOrderBookByteCode(overrides?: CallOverrides): Promise<string>;

  "getOrderBookByteCode()"(overrides?: CallOverrides): Promise<string>;

  getOrderBookFactory(overrides?: CallOverrides): Promise<string>;

  "getOrderBookFactory()"(overrides?: CallOverrides): Promise<string>;

  getOrderBookQuery(overrides?: CallOverrides): Promise<string>;

  "getOrderBookQuery()"(overrides?: CallOverrides): Promise<string>;

  getOrderNFTByteCode(overrides?: CallOverrides): Promise<string>;

  "getOrderNFTByteCode()"(overrides?: CallOverrides): Promise<string>;

  getPairFactory(overrides?: CallOverrides): Promise<string>;

  "getPairFactory()"(overrides?: CallOverrides): Promise<string>;

  priceStep(
    orderBook: string,
    price: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "priceStep(address,uint256)"(
    orderBook: string,
    price: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  priceStepFactor(overrides?: Overrides): Promise<ContractTransaction>;

  "priceStepFactor()"(overrides?: Overrides): Promise<ContractTransaction>;

  priceStepFactorUpdate(
    newPriceStepFactor: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "priceStepFactorUpdate(uint256)"(
    newPriceStepFactor: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  priceStepMap(
    orderBook: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "priceStepMap(address)"(
    orderBook: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  priceStepUpdate(
    orderBook: string,
    newPriceStep: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "priceStepUpdate(address,uint256)"(
    orderBook: string,
    newPriceStep: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  protocolFeeRate(
    orderBook: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "protocolFeeRate(address)"(
    orderBook: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  protocolFeeRateUpdate(
    orderBook: string,
    newProtocolFeeRate: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "protocolFeeRateUpdate(address,uint256)"(
    orderBook: string,
    newProtocolFeeRate: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  quoteSignificantDigits(
    orderBook: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "quoteSignificantDigits(address)"(
    orderBook: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  quoteSignificantDigitsUpdate(
    orderBook: string,
    newQuoteSignificantDigits: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "quoteSignificantDigitsUpdate(address,uint256)"(
    orderBook: string,
    newQuoteSignificantDigits: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setOrderBookByteCode(
    byteCode: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setOrderBookByteCode(bytes)"(
    byteCode: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setOrderBookFactory(
    newOrderBookFactory: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setOrderBookFactory(address)"(
    newOrderBookFactory: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setOrderBookQuery(
    newOrderBookQuery: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setOrderBookQuery(address)"(
    newOrderBookQuery: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setOrderNFTByteCode(
    byteCode: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setOrderNFTByteCode(bytes)"(
    byteCode: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setPairFactory(
    newPairFactory: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setPairFactory(address)"(
    newPairFactory: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  subsidyFeeRate(
    orderBook: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "subsidyFeeRate(address)"(
    orderBook: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  subsidyFeeRateUpdate(
    orderBook: string,
    newSubsidyFeeRate: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "subsidyFeeRateUpdate(address,uint256)"(
    orderBook: string,
    newSubsidyFeeRate: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  wETH(overrides?: CallOverrides): Promise<string>;

  "wETH()"(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    appendOrderBookByteCode(
      byteCode: BytesLike,
      flag: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "appendOrderBookByteCode(bytes,uint256)"(
      byteCode: BytesLike,
      flag: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    appendOrderNFTByteCode(
      byteCode: BytesLike,
      flag: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "appendOrderNFTByteCode(bytes,uint256)"(
      byteCode: BytesLike,
      flag: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    baseSignificantDigits(
      orderBook: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "baseSignificantDigits(address)"(
      orderBook: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    baseSignificantDigitsUpdate(
      orderBook: string,
      newBaseSignificantDigits: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "baseSignificantDigitsUpdate(address,uint256)"(
      orderBook: string,
      newBaseSignificantDigits: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    getOrderBookByteCode(overrides?: CallOverrides): Promise<string>;

    "getOrderBookByteCode()"(overrides?: CallOverrides): Promise<string>;

    getOrderBookFactory(overrides?: CallOverrides): Promise<string>;

    "getOrderBookFactory()"(overrides?: CallOverrides): Promise<string>;

    getOrderBookQuery(overrides?: CallOverrides): Promise<string>;

    "getOrderBookQuery()"(overrides?: CallOverrides): Promise<string>;

    getOrderNFTByteCode(overrides?: CallOverrides): Promise<string>;

    "getOrderNFTByteCode()"(overrides?: CallOverrides): Promise<string>;

    getPairFactory(overrides?: CallOverrides): Promise<string>;

    "getPairFactory()"(overrides?: CallOverrides): Promise<string>;

    priceStep(
      orderBook: string,
      price: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "priceStep(address,uint256)"(
      orderBook: string,
      price: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    priceStepFactor(overrides?: CallOverrides): Promise<BigNumber>;

    "priceStepFactor()"(overrides?: CallOverrides): Promise<BigNumber>;

    priceStepFactorUpdate(
      newPriceStepFactor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "priceStepFactorUpdate(uint256)"(
      newPriceStepFactor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    priceStepMap(
      orderBook: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "priceStepMap(address)"(
      orderBook: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    priceStepUpdate(
      orderBook: string,
      newPriceStep: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "priceStepUpdate(address,uint256)"(
      orderBook: string,
      newPriceStep: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    protocolFeeRate(
      orderBook: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "protocolFeeRate(address)"(
      orderBook: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    protocolFeeRateUpdate(
      orderBook: string,
      newProtocolFeeRate: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "protocolFeeRateUpdate(address,uint256)"(
      orderBook: string,
      newProtocolFeeRate: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    quoteSignificantDigits(
      orderBook: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "quoteSignificantDigits(address)"(
      orderBook: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    quoteSignificantDigitsUpdate(
      orderBook: string,
      newQuoteSignificantDigits: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "quoteSignificantDigitsUpdate(address,uint256)"(
      orderBook: string,
      newQuoteSignificantDigits: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setOrderBookByteCode(
      byteCode: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "setOrderBookByteCode(bytes)"(
      byteCode: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    setOrderBookFactory(
      newOrderBookFactory: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setOrderBookFactory(address)"(
      newOrderBookFactory: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setOrderBookQuery(
      newOrderBookQuery: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setOrderBookQuery(address)"(
      newOrderBookQuery: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setOrderNFTByteCode(
      byteCode: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "setOrderNFTByteCode(bytes)"(
      byteCode: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    setPairFactory(
      newPairFactory: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setPairFactory(address)"(
      newPairFactory: string,
      overrides?: CallOverrides
    ): Promise<void>;

    subsidyFeeRate(
      orderBook: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "subsidyFeeRate(address)"(
      orderBook: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    subsidyFeeRateUpdate(
      orderBook: string,
      newSubsidyFeeRate: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "subsidyFeeRateUpdate(address,uint256)"(
      orderBook: string,
      newSubsidyFeeRate: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    wETH(overrides?: CallOverrides): Promise<string>;

    "wETH()"(overrides?: CallOverrides): Promise<string>;
  };

  filters: {};

  estimateGas: {
    appendOrderBookByteCode(
      byteCode: BytesLike,
      flag: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "appendOrderBookByteCode(bytes,uint256)"(
      byteCode: BytesLike,
      flag: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    appendOrderNFTByteCode(
      byteCode: BytesLike,
      flag: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "appendOrderNFTByteCode(bytes,uint256)"(
      byteCode: BytesLike,
      flag: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    baseSignificantDigits(
      orderBook: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "baseSignificantDigits(address)"(
      orderBook: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    baseSignificantDigitsUpdate(
      orderBook: string,
      newBaseSignificantDigits: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "baseSignificantDigitsUpdate(address,uint256)"(
      orderBook: string,
      newBaseSignificantDigits: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    getOrderBookByteCode(overrides?: CallOverrides): Promise<BigNumber>;

    "getOrderBookByteCode()"(overrides?: CallOverrides): Promise<BigNumber>;

    getOrderBookFactory(overrides?: CallOverrides): Promise<BigNumber>;

    "getOrderBookFactory()"(overrides?: CallOverrides): Promise<BigNumber>;

    getOrderBookQuery(overrides?: CallOverrides): Promise<BigNumber>;

    "getOrderBookQuery()"(overrides?: CallOverrides): Promise<BigNumber>;

    getOrderNFTByteCode(overrides?: CallOverrides): Promise<BigNumber>;

    "getOrderNFTByteCode()"(overrides?: CallOverrides): Promise<BigNumber>;

    getPairFactory(overrides?: CallOverrides): Promise<BigNumber>;

    "getPairFactory()"(overrides?: CallOverrides): Promise<BigNumber>;

    priceStep(
      orderBook: string,
      price: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "priceStep(address,uint256)"(
      orderBook: string,
      price: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    priceStepFactor(overrides?: Overrides): Promise<BigNumber>;

    "priceStepFactor()"(overrides?: Overrides): Promise<BigNumber>;

    priceStepFactorUpdate(
      newPriceStepFactor: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "priceStepFactorUpdate(uint256)"(
      newPriceStepFactor: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    priceStepMap(orderBook: string, overrides?: Overrides): Promise<BigNumber>;

    "priceStepMap(address)"(
      orderBook: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    priceStepUpdate(
      orderBook: string,
      newPriceStep: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "priceStepUpdate(address,uint256)"(
      orderBook: string,
      newPriceStep: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    protocolFeeRate(
      orderBook: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "protocolFeeRate(address)"(
      orderBook: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    protocolFeeRateUpdate(
      orderBook: string,
      newProtocolFeeRate: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "protocolFeeRateUpdate(address,uint256)"(
      orderBook: string,
      newProtocolFeeRate: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    quoteSignificantDigits(
      orderBook: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "quoteSignificantDigits(address)"(
      orderBook: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    quoteSignificantDigitsUpdate(
      orderBook: string,
      newQuoteSignificantDigits: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "quoteSignificantDigitsUpdate(address,uint256)"(
      orderBook: string,
      newQuoteSignificantDigits: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setOrderBookByteCode(
      byteCode: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setOrderBookByteCode(bytes)"(
      byteCode: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setOrderBookFactory(
      newOrderBookFactory: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setOrderBookFactory(address)"(
      newOrderBookFactory: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setOrderBookQuery(
      newOrderBookQuery: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setOrderBookQuery(address)"(
      newOrderBookQuery: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setOrderNFTByteCode(
      byteCode: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setOrderNFTByteCode(bytes)"(
      byteCode: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setPairFactory(
      newPairFactory: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setPairFactory(address)"(
      newPairFactory: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    subsidyFeeRate(
      orderBook: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "subsidyFeeRate(address)"(
      orderBook: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    subsidyFeeRateUpdate(
      orderBook: string,
      newSubsidyFeeRate: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "subsidyFeeRateUpdate(address,uint256)"(
      orderBook: string,
      newSubsidyFeeRate: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    wETH(overrides?: CallOverrides): Promise<BigNumber>;

    "wETH()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    appendOrderBookByteCode(
      byteCode: BytesLike,
      flag: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "appendOrderBookByteCode(bytes,uint256)"(
      byteCode: BytesLike,
      flag: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    appendOrderNFTByteCode(
      byteCode: BytesLike,
      flag: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "appendOrderNFTByteCode(bytes,uint256)"(
      byteCode: BytesLike,
      flag: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    baseSignificantDigits(
      orderBook: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "baseSignificantDigits(address)"(
      orderBook: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    baseSignificantDigitsUpdate(
      orderBook: string,
      newBaseSignificantDigits: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "baseSignificantDigitsUpdate(address,uint256)"(
      orderBook: string,
      newBaseSignificantDigits: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    getOrderBookByteCode(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getOrderBookByteCode()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getOrderBookFactory(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getOrderBookFactory()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getOrderBookQuery(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getOrderBookQuery()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getOrderNFTByteCode(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getOrderNFTByteCode()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPairFactory(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getPairFactory()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    priceStep(
      orderBook: string,
      price: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "priceStep(address,uint256)"(
      orderBook: string,
      price: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    priceStepFactor(overrides?: Overrides): Promise<PopulatedTransaction>;

    "priceStepFactor()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    priceStepFactorUpdate(
      newPriceStepFactor: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "priceStepFactorUpdate(uint256)"(
      newPriceStepFactor: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    priceStepMap(
      orderBook: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "priceStepMap(address)"(
      orderBook: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    priceStepUpdate(
      orderBook: string,
      newPriceStep: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "priceStepUpdate(address,uint256)"(
      orderBook: string,
      newPriceStep: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    protocolFeeRate(
      orderBook: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "protocolFeeRate(address)"(
      orderBook: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    protocolFeeRateUpdate(
      orderBook: string,
      newProtocolFeeRate: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "protocolFeeRateUpdate(address,uint256)"(
      orderBook: string,
      newProtocolFeeRate: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    quoteSignificantDigits(
      orderBook: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "quoteSignificantDigits(address)"(
      orderBook: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    quoteSignificantDigitsUpdate(
      orderBook: string,
      newQuoteSignificantDigits: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "quoteSignificantDigitsUpdate(address,uint256)"(
      orderBook: string,
      newQuoteSignificantDigits: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setOrderBookByteCode(
      byteCode: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setOrderBookByteCode(bytes)"(
      byteCode: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setOrderBookFactory(
      newOrderBookFactory: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setOrderBookFactory(address)"(
      newOrderBookFactory: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setOrderBookQuery(
      newOrderBookQuery: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setOrderBookQuery(address)"(
      newOrderBookQuery: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setOrderNFTByteCode(
      byteCode: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setOrderNFTByteCode(bytes)"(
      byteCode: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setPairFactory(
      newPairFactory: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setPairFactory(address)"(
      newPairFactory: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    subsidyFeeRate(
      orderBook: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "subsidyFeeRate(address)"(
      orderBook: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    subsidyFeeRateUpdate(
      orderBook: string,
      newSubsidyFeeRate: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "subsidyFeeRateUpdate(address,uint256)"(
      orderBook: string,
      newSubsidyFeeRate: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    wETH(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "wETH()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
