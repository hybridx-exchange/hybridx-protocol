/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface IOrderInterface extends ethers.utils.Interface {
  functions: {
    "add(uint256,uint256)": FunctionFragment;
    "get(uint256)": FunctionFragment;
    "getUserOrders(address)": FunctionFragment;
    "initialize(uint256,address,address)": FunctionFragment;
    "mint(tuple,address)": FunctionFragment;
    "sub(uint256,uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "add",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "get", values: [BigNumberish]): string;
  encodeFunctionData(
    functionFragment: "getUserOrders",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "initialize",
    values: [BigNumberish, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "mint",
    values: [
      {
        _price: BigNumberish;
        _offer: BigNumberish;
        _remain: BigNumberish;
        _type: BigNumberish;
      },
      string
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "sub",
    values: [BigNumberish, BigNumberish]
  ): string;

  decodeFunctionResult(functionFragment: "add", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "get", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getUserOrders",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "mint", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "sub", data: BytesLike): Result;

  events: {};
}

export class IOrder extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: IOrderInterface;

  functions: {
    add(
      tokenId: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "add(uint256,uint256)"(
      tokenId: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    get(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      order: {
        _price: BigNumber;
        _offer: BigNumber;
        _remain: BigNumber;
        _type: number;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: number;
      };
      0: {
        _price: BigNumber;
        _offer: BigNumber;
        _remain: BigNumber;
        _type: number;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: number;
      };
    }>;

    "get(uint256)"(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      order: {
        _price: BigNumber;
        _offer: BigNumber;
        _remain: BigNumber;
        _type: number;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: number;
      };
      0: {
        _price: BigNumber;
        _offer: BigNumber;
        _remain: BigNumber;
        _type: number;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: number;
      };
    }>;

    getUserOrders(
      user: string,
      overrides?: CallOverrides
    ): Promise<{
      ids: BigNumber[];
      orders: {
        _price: BigNumber;
        _offer: BigNumber;
        _remain: BigNumber;
        _type: number;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: number;
      }[];
      0: BigNumber[];
      1: {
        _price: BigNumber;
        _offer: BigNumber;
        _remain: BigNumber;
        _type: number;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: number;
      }[];
    }>;

    "getUserOrders(address)"(
      user: string,
      overrides?: CallOverrides
    ): Promise<{
      ids: BigNumber[];
      orders: {
        _price: BigNumber;
        _offer: BigNumber;
        _remain: BigNumber;
        _type: number;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: number;
      }[];
      0: BigNumber[];
      1: {
        _price: BigNumber;
        _offer: BigNumber;
        _remain: BigNumber;
        _type: number;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: number;
      }[];
    }>;

    initialize(
      _id: BigNumberish,
      _admin: string,
      _orderBook: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "initialize(uint256,address,address)"(
      _id: BigNumberish,
      _admin: string,
      _orderBook: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    mint(
      orderDetail: {
        _price: BigNumberish;
        _offer: BigNumberish;
        _remain: BigNumberish;
        _type: BigNumberish;
      },
      to: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "mint((uint256,uint256,uint256,uint8),address)"(
      orderDetail: {
        _price: BigNumberish;
        _offer: BigNumberish;
        _remain: BigNumberish;
        _type: BigNumberish;
      },
      to: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    sub(
      tokenId: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "sub(uint256,uint256)"(
      tokenId: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  add(
    tokenId: BigNumberish,
    amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "add(uint256,uint256)"(
    tokenId: BigNumberish,
    amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  get(
    tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    _price: BigNumber;
    _offer: BigNumber;
    _remain: BigNumber;
    _type: number;
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: number;
  }>;

  "get(uint256)"(
    tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    _price: BigNumber;
    _offer: BigNumber;
    _remain: BigNumber;
    _type: number;
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: number;
  }>;

  getUserOrders(
    user: string,
    overrides?: CallOverrides
  ): Promise<{
    ids: BigNumber[];
    orders: {
      _price: BigNumber;
      _offer: BigNumber;
      _remain: BigNumber;
      _type: number;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: number;
    }[];
    0: BigNumber[];
    1: {
      _price: BigNumber;
      _offer: BigNumber;
      _remain: BigNumber;
      _type: number;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: number;
    }[];
  }>;

  "getUserOrders(address)"(
    user: string,
    overrides?: CallOverrides
  ): Promise<{
    ids: BigNumber[];
    orders: {
      _price: BigNumber;
      _offer: BigNumber;
      _remain: BigNumber;
      _type: number;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: number;
    }[];
    0: BigNumber[];
    1: {
      _price: BigNumber;
      _offer: BigNumber;
      _remain: BigNumber;
      _type: number;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: number;
    }[];
  }>;

  initialize(
    _id: BigNumberish,
    _admin: string,
    _orderBook: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "initialize(uint256,address,address)"(
    _id: BigNumberish,
    _admin: string,
    _orderBook: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  mint(
    orderDetail: {
      _price: BigNumberish;
      _offer: BigNumberish;
      _remain: BigNumberish;
      _type: BigNumberish;
    },
    to: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "mint((uint256,uint256,uint256,uint8),address)"(
    orderDetail: {
      _price: BigNumberish;
      _offer: BigNumberish;
      _remain: BigNumberish;
      _type: BigNumberish;
    },
    to: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  sub(
    tokenId: BigNumberish,
    amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "sub(uint256,uint256)"(
    tokenId: BigNumberish,
    amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    add(
      tokenId: BigNumberish,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "add(uint256,uint256)"(
      tokenId: BigNumberish,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    get(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      _price: BigNumber;
      _offer: BigNumber;
      _remain: BigNumber;
      _type: number;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: number;
    }>;

    "get(uint256)"(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      _price: BigNumber;
      _offer: BigNumber;
      _remain: BigNumber;
      _type: number;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: number;
    }>;

    getUserOrders(
      user: string,
      overrides?: CallOverrides
    ): Promise<{
      ids: BigNumber[];
      orders: {
        _price: BigNumber;
        _offer: BigNumber;
        _remain: BigNumber;
        _type: number;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: number;
      }[];
      0: BigNumber[];
      1: {
        _price: BigNumber;
        _offer: BigNumber;
        _remain: BigNumber;
        _type: number;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: number;
      }[];
    }>;

    "getUserOrders(address)"(
      user: string,
      overrides?: CallOverrides
    ): Promise<{
      ids: BigNumber[];
      orders: {
        _price: BigNumber;
        _offer: BigNumber;
        _remain: BigNumber;
        _type: number;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: number;
      }[];
      0: BigNumber[];
      1: {
        _price: BigNumber;
        _offer: BigNumber;
        _remain: BigNumber;
        _type: number;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: number;
      }[];
    }>;

    initialize(
      _id: BigNumberish,
      _admin: string,
      _orderBook: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "initialize(uint256,address,address)"(
      _id: BigNumberish,
      _admin: string,
      _orderBook: string,
      overrides?: CallOverrides
    ): Promise<void>;

    mint(
      orderDetail: {
        _price: BigNumberish;
        _offer: BigNumberish;
        _remain: BigNumberish;
        _type: BigNumberish;
      },
      to: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "mint((uint256,uint256,uint256,uint8),address)"(
      orderDetail: {
        _price: BigNumberish;
        _offer: BigNumberish;
        _remain: BigNumberish;
        _type: BigNumberish;
      },
      to: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    sub(
      tokenId: BigNumberish,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "sub(uint256,uint256)"(
      tokenId: BigNumberish,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    add(
      tokenId: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "add(uint256,uint256)"(
      tokenId: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    get(tokenId: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

    "get(uint256)"(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getUserOrders(user: string, overrides?: CallOverrides): Promise<BigNumber>;

    "getUserOrders(address)"(
      user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    initialize(
      _id: BigNumberish,
      _admin: string,
      _orderBook: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "initialize(uint256,address,address)"(
      _id: BigNumberish,
      _admin: string,
      _orderBook: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    mint(
      orderDetail: {
        _price: BigNumberish;
        _offer: BigNumberish;
        _remain: BigNumberish;
        _type: BigNumberish;
      },
      to: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "mint((uint256,uint256,uint256,uint8),address)"(
      orderDetail: {
        _price: BigNumberish;
        _offer: BigNumberish;
        _remain: BigNumberish;
        _type: BigNumberish;
      },
      to: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    sub(
      tokenId: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "sub(uint256,uint256)"(
      tokenId: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    add(
      tokenId: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "add(uint256,uint256)"(
      tokenId: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    get(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "get(uint256)"(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getUserOrders(
      user: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getUserOrders(address)"(
      user: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    initialize(
      _id: BigNumberish,
      _admin: string,
      _orderBook: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "initialize(uint256,address,address)"(
      _id: BigNumberish,
      _admin: string,
      _orderBook: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    mint(
      orderDetail: {
        _price: BigNumberish;
        _offer: BigNumberish;
        _remain: BigNumberish;
        _type: BigNumberish;
      },
      to: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "mint((uint256,uint256,uint256,uint8),address)"(
      orderDetail: {
        _price: BigNumberish;
        _offer: BigNumberish;
        _remain: BigNumberish;
        _type: BigNumberish;
      },
      to: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    sub(
      tokenId: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "sub(uint256,uint256)"(
      tokenId: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
