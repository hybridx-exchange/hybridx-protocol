/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { MultiCall } from "../MultiCall";

export class MultiCall__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<MultiCall> {
    return super.deploy(overrides || {}) as Promise<MultiCall>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MultiCall {
    return super.attach(address) as MultiCall;
  }
  connect(signer: Signer): MultiCall__factory {
    return super.connect(signer) as MultiCall__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MultiCall {
    return new Contract(address, _abi, signerOrProvider) as MultiCall;
  }
}

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
        ],
        internalType: "struct MultiCall.Call[]",
        name: "calls",
        type: "tuple[]",
      },
    ],
    name: "aggregate",
    outputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        internalType: "bytes[]",
        name: "returnData",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
        ],
        internalType: "struct MultiCall.Call[]",
        name: "calls",
        type: "tuple[]",
      },
    ],
    name: "aggregateIgnoreFailed",
    outputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        internalType: "bytes[]",
        name: "returnData",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
        ],
        internalType: "struct MultiCall.Call[]",
        name: "calls",
        type: "tuple[]",
      },
    ],
    name: "aggregateOnlyContract",
    outputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        internalType: "bytes[]",
        name: "returnData",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getBlockHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "blockHash",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentBlockCoinbase",
    outputs: [
      {
        internalType: "address",
        name: "coinbase",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentBlockDifficulty",
    outputs: [
      {
        internalType: "uint256",
        name: "difficulty",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentBlockGasLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "gaslimit",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentBlockTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "getEthBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastBlockHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "blockHash",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506108b0806100206000396000f3fe608060405234801561001057600080fd5b506004361061008e5760003560e01c80630f28c97d14610093578063252dba42146100a857806327e86d6e146100c95780634d2301cc146100d1578063535e4724146100ec57806372425d9d146100ff57806386d516e814610105578063a8b0574e1461010b578063b41abf9b14610119578063ee82ac5e1461012c575b600080fd5b425b6040519081526020015b60405180910390f35b6100bb6100b6366004610568565b61013e565b60405161009f9291906106fc565b61009561027d565b6100956100df366004610546565b6001600160a01b03163190565b6100bb6100fa366004610568565b610290565b44610095565b45610095565b60405141815260200161009f565b6100bb610127366004610568565b6103bc565b61009561013a3660046106c7565b4090565b805143906060906001600160401b0381111561015c5761015c610864565b60405190808252806020026020018201604052801561018f57816020015b606081526020019060019003908161017a5790505b50905060005b8351811015610277576000808583815181106101b3576101b361084e565b6020026020010151600001516001600160a01b03168684815181106101da576101da61084e565b6020026020010151602001516040516101f391906106e0565b6000604051808303816000865af19150503d8060008114610230576040519150601f19603f3d011682016040523d82523d6000602084013e610235565b606091505b50915091508161024457600080fd5b808484815181106102575761025761084e565b60200260200101819052505050808061026f9061081d565b915050610195565b50915091565b600061028a6001436107d6565b40905090565b805143906060906001600160401b038111156102ae576102ae610864565b6040519080825280602002602001820160405280156102e157816020015b60608152602001906001900390816102cc5790505b50905060005b83518110156102775760008482815181106103045761030461084e565b6020026020010151600001516001600160a01b031685838151811061032b5761032b61084e565b60200260200101516020015160405161034491906106e0565b6000604051808303816000865af19150503d8060008114610381576040519150601f19603f3d011682016040523d82523d6000602084013e610386565b606091505b509150508083838151811061039d5761039d61084e565b60200260200101819052505080806103b49061081d565b9150506102e7565b805143906060906001600160401b038111156103da576103da610864565b60405190808252806020026020018201604052801561040d57816020015b60608152602001906001900390816103f85790505b50905060005b83518110156102775761044c8482815181106104315761043161084e565b6020026020010151600001516001600160a01b03163b151590565b15610518576000808583815181106104665761046661084e565b6020026020010151600001516001600160a01b031686848151811061048d5761048d61084e565b6020026020010151602001516040516104a691906106e0565b6000604051808303816000865af19150503d80600081146104e3576040519150601f19603f3d011682016040523d82523d6000602084013e6104e8565b606091505b5091509150816104f757600080fd5b8084848151811061050a5761050a61084e565b602002602001018190525050505b806105228161081d565b915050610413565b80356001600160a01b038116811461054157600080fd5b919050565b60006020828403121561055857600080fd5b6105618261052a565b9392505050565b6000602080838503121561057b57600080fd5b82356001600160401b038082111561059257600080fd5b818501915085601f8301126105a657600080fd5b8135818111156105b8576105b8610864565b8060051b6105c78582016107a6565b8281528581019085870183870188018b10156105e257600080fd5b600093505b848410156106b9578035868111156105fe57600080fd5b8701601f196040828e038201121561061557600080fd5b61061d61077e565b6106288b840161052a565b815260408301358981111561063c57600080fd5b8084019350508d603f84011261065157600080fd5b8a8301358981111561066557610665610864565b6106758c84601f840116016107a6565b92508083528e604082860101111561068c57600080fd5b80604085018d85013760009083018c0152808b0191909152845250600193909301929187019187016105e7565b509998505050505050505050565b6000602082840312156106d957600080fd5b5035919050565b600082516106f28184602087016107ed565b9190910192915050565b600060408201848352602060408185015281855180845260608601915060608160051b870101935082870160005b8281101561077057878603605f190184528151805180885261075181888a018985016107ed565b601f01601f19169690960185019550928401929084019060010161072a565b509398975050505050505050565b604080519081016001600160401b03811182821017156107a0576107a0610864565b60405290565b604051601f8201601f191681016001600160401b03811182821017156107ce576107ce610864565b604052919050565b6000828210156107e8576107e8610838565b500390565b60005b838110156108085781810151838201526020016107f0565b83811115610817576000848401525b50505050565b600060001982141561083157610831610838565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212202b76fccf18895dff28837bed1a688e812dbc5585f6aa1ece8957189965b02c3d64736f6c63430008050033";
